@charset "utf-8";

/* ============================================
// COLOR Setting
// ==========================================*/

$primary-color: #DC4233;
$secondary-color: #F4AD25;
$third-color: #535953;
$fourth-color: #2EA9DF;
$fifth-color: #D25C27;
$sixth-color: #74B666;
$txt-color: #707070;
$txt-color-white: #fff;
$link-color: $primary-color;
$border-color: #BDC0BA;
$border-color-300: #CECDCD;
$bg-color: #EFEFEF;
$bg-color-red: #FCF3F3;
$white-color: #fff;
$black-color: #000;

/* ============================================
// FONT Setting
// ==========================================*/

@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+TC&family=Shippori+Antique+B1&display=swap');

$default-family: OSAKA, 蘭亭黑-繁, Meiryo, sans-serif;
$default-family-ie: "メイリオ", Meiryo, sans-serif;
$secondary-family: 'Noto Sans TC', sans-serif;
$secondary-family-ie: 'Shippori Antique B1', sans-serif;

/* ============================================
// Animation Setting
// ==========================================*/

$ease: cubic-bezier(.43, .45, .63, .93);

/* ============================================
// Others
// ==========================================*/

$radius-size: 5px;

@function shadow($val: .6) {
	@return 0 1em 2em -1em rgba($txt-color,$val);
}

/* ============================================
// Mixins
// ==========================================*/

$breakpoints: ('pc': 'screen and (max-width: 1024px)',
    'tab': 'screen and (max-width: 768px)',
    'sp': 'screen and (max-width: 600px)',
    'modal': 'screen and (max-width: 1181px)',
) !default;

@mixin mq($breakpoint: tab) {
    @media #{map-get($breakpoints, $breakpoint)} {
        @content;
    }
}

@mixin block($w: 1366px, $p: 2.5rem) {
	max-width: calc(#{$w} + (#{$p}*2));
	margin: 0 auto;
	padding-left: $p;
	padding-right: $p;
	position: relative;

	@include mq(tab) {
		padding-left: calc(#{$p} / 2);
		padding-right: calc(#{$p} / 2);
	}
}

@mixin img($w, $h) {
    width: 100%;
    padding-top: ($h / $w) * 100%;
    background-position: center center;
    background-size: cover;
    position: relative;
}

@mixin aspect($w, $h) {
	padding-top: ($h / $w) * 100%;
	position: relative;

	img {
		display: block;
		width: 100%;
		height: 100%;
		object-fit: cover;
		position: absolute;
		top: 0;
		left: 0;
	}
}

@mixin -img($w) {
	width: $w / 2;

	img {
		width: 100%;
		height: auto;
	}
}

@mixin flex($w, $h) {
    flex: 0 0 ($h / $w) * 100%;
    max-width: 0 0 ($h / $w) * 100%;
}

@mixin fx($w) {
	@if $w == auto {
	flex: 1 1 auto;
	max-width: 100%;
	} @else {
		flex: 0 0 $w;
		max-width: $w;
	}
}

@mixin width($mw, $w) {
    width: ($w / $mw) * 100%;
}

@mixin ba($w: 100%, $h: 100%, $d: block) {
	content: '';
	width: $w;
	height: $h;
	display: $d;
}

@mixin webp($img, $kaku: j, $page: '/') {
	@if $kaku == j {
		$kaku: jpg;
	} @else if $kaku == p {
		$kaku: png;
	} @else if $kaku == g {
		$kaku: gif;
	}

	@if $page == '/' {} @else {
		$page: '/' + $page + '/';
	}
	$path1: '../img' + $page + 'webp/' + $img + '.webp';
	$path2: '../img' + $page + $img + '.' + $kaku;

	.webp & {
		background-image: url($path1);
	}

	.no-webp & {
		background-image: url($path2);
	}
}

@mixin fa($code,$weight:900) {
	content: ($code);
	font-weight: $weight;
	font-family: 'Font Awesome 5 Free';
}

/* ============================================
// Function
// ==========================================*/

@function percent($w,$h) {
	@return ($h / $w) * 100%;
}

/* ============================================
// Unique
// ==========================================*/
